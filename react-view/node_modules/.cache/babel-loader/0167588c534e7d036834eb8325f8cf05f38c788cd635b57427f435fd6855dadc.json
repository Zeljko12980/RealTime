{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ikano\\\\source\\\\repos\\\\Zeljko12980\\\\RealTime\\\\react-view\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { Container, Typography } from '@mui/material';\nimport './App.css';\nimport { useState } from 'react';\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\nimport WaitingRoom from './components/waitingroom';\nimport ChatRoom from './components/ChatRoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [conn, setConnection] = useState();\n  const [messages, setMessages] = useState([]);\n  const joinChatRoom = async (username, chatroom) => {\n    try {\n      const conn = new HubConnectionBuilder().withUrl(\"http://192.168.0.101:5255/chat\").configureLogging(LogLevel.Information).build();\n      conn.on(\"JoinSpecificChatRoom\", (username, msg) => {\n        console.log(\"msg: \", msg);\n      });\n      conn.on(\"ReceiveSpecificMessage\", (username, msg) => {\n        console.log(\"msg:\" + msg + \" username \" + username);\n        const newMessage = {\n          username,\n          msg,\n          timestamp: new Date().toLocaleTimeString() // Capture the timestamp when the message is received\n        };\n        setMessages(messages => [...messages, newMessage]);\n      });\n      await conn.start();\n      await conn.invoke(\"JoinSpecificChatRoom\", {\n        username,\n        chatroom\n      });\n      setConnection(conn);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const sendMessage = async message => {\n    try {\n      await conn.invoke(\"SendMessage\", message);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"Welcome to the Real-Time ChatApp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), !conn ? /*#__PURE__*/_jsxDEV(WaitingRoom, {\n          joinChatRoom: joinChatRoom\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(ChatRoom, {\n          messages: messages,\n          sendMessage: sendMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PAMfG+krrlTcA6T0bZL9zJVUuf4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Container","Typography","useState","HubConnectionBuilder","LogLevel","WaitingRoom","ChatRoom","jsxDEV","_jsxDEV","App","_s","conn","setConnection","messages","setMessages","joinChatRoom","username","chatroom","withUrl","configureLogging","Information","build","on","msg","console","log","newMessage","timestamp","Date","toLocaleTimeString","start","invoke","e","sendMessage","message","children","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ikano/source/repos/Zeljko12980/RealTime/react-view/src/App.js"],"sourcesContent":["import { Container, Typography } from '@mui/material';\r\nimport './App.css';\r\nimport { useState } from 'react';\r\nimport { HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\r\nimport WaitingRoom from './components/waitingroom';\r\nimport ChatRoom from './components/ChatRoom';\r\n\r\nfunction App() {\r\n  const [conn, setConnection] = useState();\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const joinChatRoom = async (username, chatroom) => {\r\n    try {\r\n      const conn = new HubConnectionBuilder()\r\n        .withUrl(\"http://192.168.0.101:5255/chat\")\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      conn.on(\"JoinSpecificChatRoom\", (username, msg) => {\r\n        console.log(\"msg: \", msg);\r\n      });\r\n\r\n      conn.on(\"ReceiveSpecificMessage\", (username, msg) => {\r\n        console.log(\"msg:\" + msg + \" username \" + username);\r\n        const newMessage = {\r\n          username,\r\n          msg,\r\n          timestamp: new Date().toLocaleTimeString(), // Capture the timestamp when the message is received\r\n        };\r\n        setMessages(messages => [...messages, newMessage]);\r\n      });\r\n\r\n      await conn.start();\r\n      await conn.invoke(\"JoinSpecificChatRoom\", { username, chatroom });\r\n\r\n      setConnection(conn);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const sendMessage = async(message) => {\r\n    try {\r\n      await conn.invoke(\"SendMessage\", message);\r\n    } catch (e){\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <main>\r\n        <Container>\r\n          <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n            Welcome to the Real-Time ChatApp\r\n          </Typography>\r\n          { !conn  \r\n            ? <WaitingRoom joinChatRoom={joinChatRoom}></WaitingRoom>\r\n            : <ChatRoom messages={messages} sendMessage={sendMessage}></ChatRoom>\r\n          }\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}